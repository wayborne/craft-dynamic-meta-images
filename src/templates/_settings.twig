{% extends '_layouts/cp' %}

{% import '_includes/forms.twig' as forms %}

{% set title = "Dynamic meta images"|t('dynamic-meta-images') %}
{% set fullPageForm = true %}
{% set sections = craft.app.sections.getAllSections() %}

{% set crumbs = [
    { label: 'Settings' | t('app'), url: url('settings') }
] %}


{% set contextMenu %}
    {% if craft.app.getIsMultiSite() %}
        {% if craft.app.sites.getEditableSites()|length > 1 %}
            <div id="sites-btn" class="btn menubtn" data-icon="world">{{ requestedSite.name }}</div>
            <div class="menu">
                <ul class="padded">
                    {% for site in craft.app.sites.getEditableSites() %}
                        <li>
                            <a href="{{ url('settings/plugins/dynamic-meta-images/', {site: site.handle} ) }}"
                                {% if site.handle == craft.app.request.getQueryParam('site') %}class="sel"{% endif %}>
                                {{ site.name }}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
            </div>
            <input type="hidden" name="siteId" value="{{ currentSite.id }}">
        {% endif %}
    {% endif %}
{% endset %}


{% block content %}
    {% set configFile = config['sites'][currentSiteHandle] ?? null %}
    {% set volumeId = null %}
    {% if siteSettings.volumeHandle %}
        {% set volume = craft.app.volumes.getVolumeByHandle(siteSettings.volumeHandle) ?? null %}
        {% set volumeId = volume ? volume.id : null %}
    {% endif %}
    <input type="hidden" name="action" value="dynamic-meta-images/settings/save">
    <input type="hidden" name="pluginHandle" value="dynamic-meta-images">
    {{
      forms.hidden({
        id:'currentSiteHandle',
        name:'currentSiteHandle',
        value:requestedSite.handle
      })
    }}
    <div id="general">
      {% if configFile %}
        {{ tag('p', {
            class: ['warning', 'with-icon'],
            text: 'These settings might be overwritten, a config file detected.'|t('dynamic-meta-images'),
        }) }}
      {% endif %}
      <div class="field">
        <div class="heading">
          <label>{{ 'Volume' | t('app') }}</label>
        </div>
        <div class="instructions">
          <p>Volume your images will be saved to.</p>
        </div>
        {{ forms.volume({
          first:true,
          id: 'volumeHandle',
          name: 'siteSettings[volumeHandle]',
          options:craft.cp.getVolumeOptions(),
          addOptionLabel: 'Create a new volumeâ€¦'|t('app'),
          value: volumeId ?? '',
        }) }}
      </div>
      {% set rows = [] %}
      {% for section in sections %}
          {% set sectionId = 'section-' ~ section.id %}
          {% set templateName = siteSettings.sections[sectionId] ?? null %}
          {% set row = {
              id: sectionId,
              name: section.name,
              templateName: templateName
          } %}
          {% set rows = rows|merge([row]) %}
      {% endfor %}
      {{ forms.editableTableField({
          label: "Section settings"|t('dynamic-meta-images'),
          instructions: "Configure dynamic meta images per sections."|t('dynamic-meta-images'),

          id: 'sections',
          name: 'siteSettings[sections]',
          cols: {
              id: {
                  type: 'hidden',
                  heading: "ID",
                  class:['hidden']
              },
              name: {
                  type: 'heading',
                  heading: "Section"|t('dynamic-meta-images'),
                  thin:true
              },
              templateName: {
                  type: 'template',
                  heading: "Template"|t('dynamic-meta-images'),
                  placeholder: "image-template",
                  code: true,
              }
          },
          rows: rows,
          addRowLabel: "Add a section"|t('dynamic-meta-images'),
          fullWidth: true,
          allowAdd: false,
          allowDelete: false,
          allowReorder: false,
      }) }}
    </div>
{% endblock %}
